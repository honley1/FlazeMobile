// Generated by view binder compiler. Do not edit!
package com.honley.flazemobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.honley.flazemobile.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRegisterBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton backBtn;

  @NonNull
  public final EditText emailEt;

  @NonNull
  public final LinearLayout emailLin;

  @NonNull
  public final Guideline guideline;

  @NonNull
  public final ImageView iconEmail;

  @NonNull
  public final ImageView iconPassword;

  @NonNull
  public final ImageView iconUsername;

  @NonNull
  public final ImageView imageView3;

  @NonNull
  public final TextView loginTitle;

  @NonNull
  public final EditText passwordEt;

  @NonNull
  public final LinearLayout passwordLin;

  @NonNull
  public final Button signUpBtn;

  @NonNull
  public final EditText usernameEt;

  @NonNull
  public final LinearLayout usernameLin;

  private ActivityRegisterBinding(@NonNull ConstraintLayout rootView, @NonNull ImageButton backBtn,
      @NonNull EditText emailEt, @NonNull LinearLayout emailLin, @NonNull Guideline guideline,
      @NonNull ImageView iconEmail, @NonNull ImageView iconPassword,
      @NonNull ImageView iconUsername, @NonNull ImageView imageView3, @NonNull TextView loginTitle,
      @NonNull EditText passwordEt, @NonNull LinearLayout passwordLin, @NonNull Button signUpBtn,
      @NonNull EditText usernameEt, @NonNull LinearLayout usernameLin) {
    this.rootView = rootView;
    this.backBtn = backBtn;
    this.emailEt = emailEt;
    this.emailLin = emailLin;
    this.guideline = guideline;
    this.iconEmail = iconEmail;
    this.iconPassword = iconPassword;
    this.iconUsername = iconUsername;
    this.imageView3 = imageView3;
    this.loginTitle = loginTitle;
    this.passwordEt = passwordEt;
    this.passwordLin = passwordLin;
    this.signUpBtn = signUpBtn;
    this.usernameEt = usernameEt;
    this.usernameLin = usernameLin;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_register, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRegisterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back_btn;
      ImageButton backBtn = ViewBindings.findChildViewById(rootView, id);
      if (backBtn == null) {
        break missingId;
      }

      id = R.id.email_et;
      EditText emailEt = ViewBindings.findChildViewById(rootView, id);
      if (emailEt == null) {
        break missingId;
      }

      id = R.id.email_lin;
      LinearLayout emailLin = ViewBindings.findChildViewById(rootView, id);
      if (emailLin == null) {
        break missingId;
      }

      id = R.id.guideline;
      Guideline guideline = ViewBindings.findChildViewById(rootView, id);
      if (guideline == null) {
        break missingId;
      }

      id = R.id.icon_email;
      ImageView iconEmail = ViewBindings.findChildViewById(rootView, id);
      if (iconEmail == null) {
        break missingId;
      }

      id = R.id.icon_password;
      ImageView iconPassword = ViewBindings.findChildViewById(rootView, id);
      if (iconPassword == null) {
        break missingId;
      }

      id = R.id.icon_username;
      ImageView iconUsername = ViewBindings.findChildViewById(rootView, id);
      if (iconUsername == null) {
        break missingId;
      }

      id = R.id.imageView3;
      ImageView imageView3 = ViewBindings.findChildViewById(rootView, id);
      if (imageView3 == null) {
        break missingId;
      }

      id = R.id.login_title;
      TextView loginTitle = ViewBindings.findChildViewById(rootView, id);
      if (loginTitle == null) {
        break missingId;
      }

      id = R.id.password_et;
      EditText passwordEt = ViewBindings.findChildViewById(rootView, id);
      if (passwordEt == null) {
        break missingId;
      }

      id = R.id.password_lin;
      LinearLayout passwordLin = ViewBindings.findChildViewById(rootView, id);
      if (passwordLin == null) {
        break missingId;
      }

      id = R.id.sign_up_btn;
      Button signUpBtn = ViewBindings.findChildViewById(rootView, id);
      if (signUpBtn == null) {
        break missingId;
      }

      id = R.id.username_et;
      EditText usernameEt = ViewBindings.findChildViewById(rootView, id);
      if (usernameEt == null) {
        break missingId;
      }

      id = R.id.username_lin;
      LinearLayout usernameLin = ViewBindings.findChildViewById(rootView, id);
      if (usernameLin == null) {
        break missingId;
      }

      return new ActivityRegisterBinding((ConstraintLayout) rootView, backBtn, emailEt, emailLin,
          guideline, iconEmail, iconPassword, iconUsername, imageView3, loginTitle, passwordEt,
          passwordLin, signUpBtn, usernameEt, usernameLin);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
