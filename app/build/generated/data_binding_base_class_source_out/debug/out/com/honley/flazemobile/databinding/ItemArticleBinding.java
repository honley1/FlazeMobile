// Generated by view binder compiler. Do not edit!
package com.honley.flazemobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.honley.flazemobile.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemArticleBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView articleDescription;

  @NonNull
  public final ImageView articleImage;

  @NonNull
  public final TextView articleName;

  @NonNull
  public final TextView articleText;

  private ItemArticleBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView articleDescription, @NonNull ImageView articleImage,
      @NonNull TextView articleName, @NonNull TextView articleText) {
    this.rootView = rootView;
    this.articleDescription = articleDescription;
    this.articleImage = articleImage;
    this.articleName = articleName;
    this.articleText = articleText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemArticleBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemArticleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_article, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemArticleBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.article_description;
      TextView articleDescription = ViewBindings.findChildViewById(rootView, id);
      if (articleDescription == null) {
        break missingId;
      }

      id = R.id.article_image;
      ImageView articleImage = ViewBindings.findChildViewById(rootView, id);
      if (articleImage == null) {
        break missingId;
      }

      id = R.id.article_name;
      TextView articleName = ViewBindings.findChildViewById(rootView, id);
      if (articleName == null) {
        break missingId;
      }

      id = R.id.article_text;
      TextView articleText = ViewBindings.findChildViewById(rootView, id);
      if (articleText == null) {
        break missingId;
      }

      return new ItemArticleBinding((ConstraintLayout) rootView, articleDescription, articleImage,
          articleName, articleText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
